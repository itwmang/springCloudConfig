server:
  port: 2190
spring:
  application:
    name: authentic-service
  rabbitmq:
     host: 127.0.0.1
     port: 5672
     username: rabbitmq
     password: rabbitmq
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: true
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    prefer-file-system-access: true
    suffix: .ftl
    template-loader-path: classpath:/templates/
#####################################################################################################
# eurake
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    #表示eureka client发送心跳给server端的频率。如果  在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance
    lease-renewal-interval-in-seconds: 5 #注册服务默认心跳时间为30秒，当一个服务器不可用，需要3个心跳才能让服务器和客户端的元数据相同。生产环境最好使用默认配置。
    #表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
    lease-expiration-duration-in-seconds: 10 # 续约到期时间（默认90秒）
  client:
    healthcheck:
      enable: true # 开启健康检查（依赖spring-boot-starter-actuator）
    service-url:
      defaultZone: http://eureka:eureka@120.79.90.129:2188/eureka
      #开启密码模式 http://${userName}:${password}@localhost:2180/eureka
    registry-fetch-interval-seconds: 10


#####################################################################################################

# 打印日志 trace
#logging:
#  level:
#    root: debug
#    org.hibernate: info
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#    com.springms: DEBUG
##自定义日志格式
logging:
  config: classpath:logback.xml
#####################################################################################################



#####################################################################################################
# druid 连接池配置
druid:
  driver-class-name: com.mysql.jdbc.Driver
  url: jdbc:mysql://120.79.90.129:3306/study?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
  username: root
  password: password
  #初始化大小
  initial-size: 5
  #最小
  min-idle : 5
  #最大
  max-active : 20
  max-wait : 60000
  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  time-between-eviction-runs-millis : 60000
   #配置一个连接在池中最小生存的时间，单位是毫秒
  min-evictable-idle-time-millis : 300000
  validation-query : SELECT 1 FROM DUAL
  test-while-idle : true
  test-on-borrow : false
  test-on-return : false
  #打开PSCache,并且指定每个连接上的PSCache的大小
  pool-prepared-statements : true
  max-pool-prepared-statement-per-connection-size : 20
  #配置监控统计拦截的filters,去掉后监控界面sql无法统计 wall用于防火墙
  filters : stat,wall,log4j
  connection-properties : druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  loginUsername : admin
  loginPassword : root
  logSlowSql: true
#####################################################################################################

#####################################################################################################
# mybatis配置
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.spring.cloud.authentic.entity

#####################################################################################################



#####################################################################################################
# authServer配置

fw:
  jwt:
    jwtKey: jwt:token:wmang

jwt:
  auth:
    clientId: Y29tLndtYW5nLmV4ZXJjaXNl
    clientSecret: e2JjcnlwdH0kMmEkMTAkUDdBZm1ucEU4dlNkZkF0ZnlrV1R0LmxKbnd0U0c0MXkyOTFIc0I2WTM2VjZOU2VOcUcyNW0=
    scope: server
    accessTokenValiditySeconds: 3600
#    privateKey:
#    publicKey:

urls:
  collects:
  - /auth/**
  - /user/**
  - /**/*.css
  - /**/*.png
  - /info
  - /health
  - /metrics/**
  - /loggers/**
  - /mobile/token
#####################################################################################################


feign:
  okhttp:
    enable: true

## 下面配置移至公共配置
#请求处理的超时时间
#ribbon:
#  ReadTimeout: 120000
##请求连接的超时时间
#  ConnectTimeout: 30000

#feign.hystrix.enabled: true
##hystrix 熔断机制
#hystrix:
#  shareSecurityContext: true
#  command:
#    default:
#      circuitBreaker:
#        sleepWindowInMilliseconds: 100000
#        forceClosed: true
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 600000


##动态刷新配置文件
management:
  endpoints:
    web:
      exposure:
        #暴露bus-refresh节点，通过此节点刷新配置
        inclouds: '*'